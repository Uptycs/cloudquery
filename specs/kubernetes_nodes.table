table_name("kubernetes_nodes")
description("Kubernetes nodes running on a cluster.")
schema([
     Column("uid", TEXT, "Unique identiier of the node"),
     Column("hostname", TEXT, "hostname of the node "),
     Column("name", TEXT, "Name of the node"),
     Column("resource_version", TEXT, "Resource version corresponding to the node"),
     Column("self_link", TEXT, "Link to access node details"),
     Column("system_uuid", TEXT, "uuid of system"),
     Column("architecture", TEXT, "architecture of node machine"),
     Column("boot_id", TEXT, "Boot id of node host"),
     Column("kubelet_version", TEXT, "version of kubelet service on node"),
     Column("kube_proxy_version", TEXT, "version of kubelet proxy on host"),
     Column("container_runtime", TEXT, "Container runtime on node"),
     Column("kernel_version", TEXT, "Kernel version on node"),
     Column("machine_id", TEXT, "Machine id of node"),
     Column("operating_system", TEXT, "OS on node host"),
     Column("os_image", TEXT, "OS image on node host"),
     Column("kubelet_port", TEXT, "kubelet service port number"),
     Column("total_cpu", TEXT, "Total number of CPUs on Node"),
     Column("free_cpu", TEXT, "Currently free cpu on node"),
     Column("total_memory", TEXT, "Total memory on node"),
     Column("free_memory", TEXT, "Currently free memory on node"),
     Column("total_storage", TEXT, "Available storage on node"),
     Column("free_storage", TEXT, "Free storage on node"),
     Column("total_one_gb_slabs", TEXT, "Total one GB slabs in node memory"),
     Column("free_one_gb_slabs", TEXT, "Free one GB slabs on node memory"),
     Column("total_two_mb_slabs", TEXT, "Total two MB slabs in node memory"),
     Column("free_two_mb_slabs", TEXT, "Free two MB slabs in node memory"),
     Column("total_pods_capacity", TEXT, "Total capacity of node in terms of number of pods"),
     Column("free_pods_capacity", TEXT, "free capacity of node in terms of number of pods"),
])
implementation("apiTable@genApiTable")
